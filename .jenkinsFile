pipeline {
    agent any

 stages {

    stage('Build WAR') {
                steps {
                    script {
                        def mvnHome = tool name: 'maven', type: 'maven'
                        def compilePackageCommand = "${mvnHome}\\bin\\mvn.cmd package"

                        bat(script: compilePackageCommand)
                    }
                }
         }

        stage('Copy WAR to Linux Server') {
            steps {
                script {


                    def remoteServer = [
                        host: '20.204.136.143',
                        user: 'root'
                    ]

                    def warFileName = 'JenkinsTest.war'
                    def localWarPath = 'target/JenkinsTest.war' // Replace with the actual path to your WAR file on Windows
                    def remoteWarPath = '/opt/tomcat/webapps/' // Replace with the desired path on the Linux server
                    def pathToFolder ='/home/techhive/'


                if(isUnix()){

                                echo 'Creating update folder.'


                                    def timestamp = new Date().format("dd_MM_yyyy")
                                    def folderName = "${pathToFolder}update_${timestamp}"


                                echo "${pathToFolder}update_${timestamp}"
                                                     // Create the folder

                                     sh """

                                        ssh  ${remoteServer.user}@${remoteServer.host} "mkdir -p ${folderName}"

                                     """

                                echo 'Folder created ${folderName}'


                                echo 'Creating backup folder.'

                                     def backUpFolder = "${folderName}/backup"


                                     sh """

                                        ssh  ${remoteServer.user}@${remoteServer.host} "mkdir -p ${backUpFolder}"

                                     """

                                echo 'Backup folder created ${backUpFolder}'

                                echo 'Tacking backup of old war'

                                         sh """
                                               ssh  ${remoteServer.user}@${remoteServer.host} "cp -rf ${remoteWarPath}/${warFileName}  ${backUpFolder}"
                                             """
                                echo 'backup created in ${backUpFolder}'


                                echo 'Take new War and upload to upload folder'

                                        def sshCommand = """
                                            scp -o StrictHostKeyChecking=no "target/${warFileName}" "${remoteServer.user}@${remoteServer.host}:${pathToFolder}${folderName}"

                                        """

                               def sshExitCode = sh(script: sshCommand, returnStatus: true)

                               if (sshExitCode == 0) {
                                    echo 'WAR file copied successfully to the Linux server.'

                                          echo 'Remove war file and copy in webApps'

                                                 sh """
                                                     ssh  ${remoteServer.user}@${remoteServer.host} "rm -rf ${remoteWarPath}${warFileName}"
                                                     ssh  ${remoteServer.user}@${remoteServer.host} "cp -rf ${pathToFolder}${folderName}/${warFileName} ${remoteWarPath}"

                                                     """


                                          echo 'Remove war file and copy in webApps done'
                                } else {
                                    error "Error copying WAR file to Linux server. Exit code: ${sshExitCode}"
                               }

                            }

                   else{

                             echo 'Creating update folder.'


                                def timestamp = new Date().format("dd_MM_yyyy")
                                def folderName = "${pathToFolder}update_${timestamp}"


                            echo "${pathToFolder}update_${timestamp}"
                                                 // Create the folder

                                 bat"""

                                    ssh  ${remoteServer.user}@${remoteServer.host} "mkdir -p ${folderName}"

                                 """

                            echo 'Folder created ${folderName}'


                            echo 'Creating backup folder.'

                                 def backUpFolder = "${folderName}/backup"


                                 bat"""

                                    ssh  ${remoteServer.user}@${remoteServer.host} "mkdir -p ${backUpFolder}"

                                 """

                            echo 'Backup folder created ${backUpFolder}'

                            echo 'Tacking backup of old war'

                                     bat """
                                           ssh  ${remoteServer.user}@${remoteServer.host} "cp -rf ${remoteWarPath}/${warFileName}  ${backUpFolder}"
                                         """
                            echo 'backup created in ${backUpFolder}'


                            echo 'Take new War and uplod to upload folder'

                                     def sshCommand = """
                                                    scp -o StrictHostKeyChecking=no "target/${warFileName}" "${remoteServer.user}@${remoteServer.host}:${pathToFolder}${folderName}"

                                                """

                                     def sshExitCode = bat(script: sshCommand, returnStatus: true)

                                     if (sshExitCode == 0) {
                                            echo 'WAR file copied successfully to the Linux server.'

                                                  echo 'Remove war file and copy in webApps'

                                                         bat """
                                                             ssh  ${remoteServer.user}@${remoteServer.host} "rm -rf ${remoteWarPath}${warFileName}"
                                                             ssh  ${remoteServer.user}@${remoteServer.host} "cp -rf ${pathToFolder}${folderName}/${warFileName} ${remoteWarPath}"

                                                             """


                                                  echo 'Remove war file and copy in webApps done'
                                        } else {
                                            error "Error copying WAR file to Linux server. Exit code: ${sshExitCode}"
                                     }

                    }
                  }
            }
        }
    }
}













