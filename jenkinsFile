// // pipeline {
// //     agent any
// //     tools {
// //         maven 'maven'
// //     }
// //
// //     stages {
// //
// //         stage('Build') {
// //             steps {
// //
// //                  bat 'mvn clean package'
// //
// //             }
// //         }
// //
// //         stage('Deploy to Tomcat') {
// //             steps {
// //                 script {
// //                   // deploy adapters: [tomcat9(credentialsId: '30bc9812-7857-470b-be20-2cba0331c22f', path: 'jenkinsTest', url: 'http://192.168.100.55:8080/')], contextPath: 'C:/Program Files/Apache Software Foundation/Tomcat 10.1', war: '**/*.war'
// //                   //deploy contextPath: 'C:\\Program Files\\Apache Software Foundation\\Tomcat 10.1', war: '**/*.war'
// //                   // deploy adapters: [tomcat9(credentialsId: 'dhruvi', path: '', url: 'http://192.168.100.55:8080/')], contextPath: null, onFailure: false, war: '**/*.war'
// //
// //                   //deploy adapters: [tomcat9(credentialsId: 'dhruvi', path: '', url: 'http://192.168.100.55:8080/')], contextPath: 'C:/Program Files/Apache Software Foundation/Tomcat 10.1/webapps', onFailure: false, war: '**/*.war'
// //
// //                   //deploy adapters: [tomcat9(credentialsId: '6dda90c2-49aa-4881-8946-98983d1f63dc', path: '', url: 'http://192.168.100.55:8080/')], contextPath: 'C:/Program Files/Apache Software Foundation/Tomcat 10.1/webapps/', war: '**/*.war'
// // //                   deploy adapters: [tomcat9(credentialsId: '86bd85f9-f1ca-4132-b414-d8bdf7334183', path: 'jenkinsTest', url: 'https://baeb-27-109-25-22.ngrok.io/')], contextPath: 'C:/Program Files/Apache Software Foundation/Tomcat 10.1', war: '**/*.war'
// // //
// //
// //                   deploy adapters: [tomcat9(credentialsId: '17b664e0-d5dd-48a4-9cc4-f880466df5e4', path: '', url: 'http://localhost:8080/')], contextPath: 'C:/Program Files/Apache Software Foundation/Tomcat 10.1/webapps/', war: '**/*.war'
// //
// //                 }
// //             }
// //         }
// //     }
// // }
//
//
//
// pipeline {
//     agent any
// tools {
//          maven 'maven'
//      }
//     environment {
//         TOMCAT_URL = 'https://98c6-103-240-79-198.ngrok-free.app/'  // URL of your Tomcat server
//         TOMCAT_USER = 'admin'  // Tomcat Manager username
//         TOMCAT_PASSWORD = 'Test@123'  // Tomcat Manager password
//         WAR_FILE_PATH = 'E:/jenkinsTest/jenkinsTest/target/'  // Path to your WAR file
//         CONTEXT_PATH = 'JenkinsTest'  // The context path where you want to deploy your app
//     }
//
//     stages {
//                  stage('Build') {
//                        steps {
//
//                             bat 'mvn clean package'
//
//                        }
//                    }
//
//         stage('Deploy to Tomcat') {
//             steps {
//                 script {
//                     // Use curl or PowerShell (Invoke-WebRequest) to deploy the WAR file to Tomcat Manager
//                     def deployCommand = """
//                         curl -u ${TOMCAT_USER}:${TOMCAT_PASSWORD} ${TOMCAT_URL}/manager/text/deploy?path=${CONTEXT_PATH} -T "${WAR_FILE_PATH}"
//                     """
//
//                     // Execute the deploy command
//                     bat(deployCommand)
//                 }
//             }
//         }
//     }
//
// }

node {

   def remoteServer = [

           host: '20.204.136.143',
           user: 'admin@SJ-DHRUVI_PATEL',
           credentialsId: 'admin@SJ-DHRUVI_PATEL', // Use the actual SSH key credential ID
           port: 22
       ]


 def tomcatWeb = '/home/techhive/Dhruvi'
 //  def tomcatBin = 'C:\\Program Files\\Apache Software Foundation\\Tomcat 10.1\\bin'
   def tomcatStatus = ''
//    stage('SCM Checkout'){
//      git 'https://github.com/sivajavatechie/JenkinsWar.git'
//    }
   stage('Compile-Package-create-war-file'){
      // Get maven home path
      def mvnHome =  tool name: 'maven', type: 'maven'
      bat "${mvnHome}/bin/mvn package"
      }
/*   stage ('Stop Tomcat Server') {
               bat ''' @ECHO OFF
               wmic process list brief | find /i "tomcat" > NUL
               IF ERRORLEVEL 1 (
                    echo  Stopped
               ) ELSE (
               echo running
                  "${tomcatBin}\\shutdown.bat"
                  sleep(time:10,unit:"SECONDS")
               )
'''
   }*/
   stage('Deploy to Tomcat'){
     bat "copy target\\JenkinsTest.war \"${tomcatWeb}\\JenkinsTest.war\""
   }
      stage ('Start Tomcat Server') {
         sleep(time:5,unit:"SECONDS")
   //      bat "${tomcatBin}\\startup.bat"
    //     sleep(time:100,unit:"SECONDS")
   }



}

